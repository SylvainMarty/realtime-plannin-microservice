services:
  traefik:
    image: traefik:v2.4
    container_name: traefik
    command:
      #- "--log.level=DEBUG"
      - "--accesslog=true"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web-secure.address=:443"
    ports:
      - "80:80"
      - "1337:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  nats_server:
    image: nats:2.10.7-alpine
    ports:
      - "4222:4222"
      - "8222:8222"
    volumes:
      - ./infra/nats-cluster.conf:/nats-cluster.conf:ro
      - ./infra/data:/nats/storage
    command: ["-n", "nats_server", "--config", "/nats-cluster.conf" , "-V"] # , "-V"
    restart: always

#  api:
#    image: node:18-alpine
#    working_dir: /app
#    volumes:
#      - ./backend:/app:cached
#    command: ["yarn", "start", "api"]
#    restart: always
#    labels:
#      - "traefik.enable=true"
#      - "traefik.http.routers.api.rule=Host(`planning.api`)"
#      - "traefik.http.routers.api.entrypoints=web"
#      - "traefik.http.services.api.loadbalancer.server.port=3000"
#
#  consumer:
#    image: node:18-alpine
#    working_dir: /app
#    volumes:
#      - ./backend:/app:cached
#    command: ["yarn", "start", "consumer"]
#    restart: always
#    deploy:
#      replicas: 2

  # nats_server:
  #   image: nats:2.10.7-alpine
  #   build:
  #       context: .
  #       dockerfile: ./Dockerfile
  #   volumes:
  #     - ./infra/nats-cluster.conf:/nats-cluster.conf:ro
  #     - ./infra/data:/nats/storage
  #   # command: ["-n", "echo nats_server_$(($RANDOM % 100 + 1))", "--config", "/nats-cluster.conf"] # , "-V"
  #   restart: always
  #   deploy:
  #     replicas: 3
  #     endpoint_mode: dnsrr

#  nats_server_1:
#    image: nats:2.10.7-alpine
#    ports:
#      - "4222:4222"
#    volumes:
#      - ./infra/nats-cluster.conf:/nats-cluster.conf:ro
#      - ./infra/data:/nats/storage
#    command: ["-n", "nats_server_1", "--config", "/nats-cluster.conf"] # , "-DV"
#    restart: always
#    labels:
#      - "traefik.enable=true"
#      - "traefik.http.routers.nats_server_1.rule=Host(`nats_server_1`)"
#      - "traefik.http.routers.nats_server_1.entrypoints=web"
#      - "traefik.http.services.nats_server_1.loadbalancer.server.port=8222"
#
#  nats_server_2:
#    image: nats:2.10.7-alpine
#    ports:
#      - "4223:4222"
#      - "8222:8222"
#    volumes:
#      - ./infra/nats-cluster.conf:/nats-cluster.conf:ro
#      - ./infra/data:/nats/storage
#    command: ["-n", "nats_server_2", "--config", "/nats-cluster.conf"] # , "-DV"
#    restart: always
#    labels:
#      - "traefik.enable=true"
#      - "traefik.http.routers.nats_server_1.rule=Host(`nats_server_2`)"
#      - "traefik.http.routers.nats_server_1.entrypoints=web"
#      - "traefik.http.services.nats_server_1.loadbalancer.server.port=8222"
#
#  nats_server_3:
#    image: nats:2.10.7-alpine
#    ports:
#      - "4224:4222"
#    volumes:
#      - ./infra/nats-cluster.conf:/nats-cluster.conf:ro
#      - ./infra/data:/nats/storage
#    command: ["-n", "nats_server_3", "--config", "/nats-cluster.conf"] # , "-DV"
#    restart: always
#    labels:
#      - "traefik.enable=true"
#      - "traefik.http.routers.nats_server_1.rule=Host(`nats_server_3`)"
#      - "traefik.http.routers.nats_server_1.entrypoints=web"
#      - "traefik.http.services.nats_server_1.loadbalancer.server.port=8222"
